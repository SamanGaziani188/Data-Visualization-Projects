matrix <- matrix[0:100, ]
matrix
##Question 3
matrix <- data.matrix(data, rownames.force = NA)
matrix <- matrix[0:100,]
matrix <- matrix[,(matrix$pregnant) & (matrix$glucose)]
matrix <- matrix[,pregnant]
matrix <- matrix[,"pregnant"]
matrix
matrix <- matrix[,("pregnant", "insulin")]
matrix <- matrix[,("pregnant" & "insulin")]
matrix <- matrix[,("pregnant" + "insulin")]
matrix <- matrix[,("pregnant"), (insulin")]
matrix
matrix <- matrix[,("pregnant"), (insulin")]
matrix
##Question 3
mat <- data.matrix(data, rownames.force = NA)
mat <- mat[0:100,]
res_mat <- matrix(c("pregnant", "insulin", "glucose"), ncol = 1)
fin_mat <- mat[, res_mat[, 1]]
fin_mat
##Question 3
mat <- data.matrix(data, rownames.force = NA)
mat <- mat[0:100,]
res_mat <- matrix(c("insulin", "glucose", "pressure", "pregnant", "mass", "age", "diabetes" ), ncol = 1)
fin_mat <- mat[, res_mat[, 1]]
fin_mat
fin_mat <- fin_mat[-c(10,25,60,45),]
fin_mat
##Question 4
length(data)
##Question 4
length(data[0])
##Question 4
length(data[1])
##Question 4
nrows(data)
##Question 4
nrow(data)
data$glucose[1]
data$glucose
data$glucose[2]
##Question 4
sum <- 0
count <- 0
for (i in nrow(data)){
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
sum <- sum + data$glucose[i]
count <- count+1
}
}
average <- sum/count
average
data$glucose[i]
##Question 4
sum <- 0
count <- 0
for (i in 1:nrow(data)){
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
average <- sum/count
average
for (i in 1:nrow(data)){
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
average <- sum/count
##Question 4
sum <- 0
count <- 0
for (i in 1:nrow(data)){
i
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
##Question 4
sum <- 0
count <- 0
len <- nrow(data)
for (i in 1:len){
i
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
##Question 4
sum <- 0
count <- 0
len <- nrow(data)
len
for (i in 1:len){
i
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
i
len <- length(data)
len
len <- length(data$glucose)
len
for (i in 1:len){
i
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
average <- sum/count
average
type(len)
typeof(len)
count <- 0
len
for (i in 1:len){
i
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
average <- sum/count
average
sum
len <- length(data$glucose)
typeof(len)
for (i in 1:len){
data$glucose[i]
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
1:len
aaaaa
for (i in 1:len){
aaaaa
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
print("aaaaa")
##Question 4
sum <- 0
count <- 0
len <- length(data$glucose)
typeof(len)
for (i in 1:len){
print("aaaaa")
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
count <- 0
len <- length(data$glucose)
typeof(len)
for (i in 1:len){
print(i)
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
##Question 4
sum <- 0
count <- 0
len <- length(data$glucose)
typeof(len)
for (i in 1:len){
if (data$glucose[i] > 20 & data$glucose[i] < 30) {
print(i)
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
##Question 4
sum <- 0
count <- 0
len <- length(data$glucose)
typeof(len)
for (i in 1:len){
if (data$glucose[i] > 20) {
print(i)
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
for (i in 1:len){
if (data$glucose[i] > 20,) {
print(i)
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
for (i in 1:len){
if (data$glucose[i] > 20) {
print(i)
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
##Question 4
sum <- 0
count <- 0
len <- length(data$glucose)
typeof(len)
for (i in 1:len){
if (data$age[i] > 20 & data$age[i] < 30) {
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
print(data$age)
typeof(len)
for (i in 1:len){
if (data$age[i] > 20) {
print(data$age[i])
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
sum
average <- sum/count
average
len <- length(data$glucose)
typeof(len)
for (i in 1:len){
if (data$age[i] > 20 & data$age[i] < 30) {
print(data$age[i])
data$glucose[i]
sum <- sum + data$glucose[i]
count <- count+1
}
}
sum
average <- sum/count
average
#extracting first 100 rows
mat <- mat[0:100,]
#extracting specific columns
res_mat <- matrix(c("insulin", "glucose", "pressure", "pregnant", "mass", "age", "diabetes" ), ncol = 1)
fin_mat <- mat[, res_mat[, 1]]
#removing rows
fin_mat <- fin_matx[!x %in% 10]
fin_mat
#extracting first 100 rows
mat <- mat[0:100,]
#extracting specific columns
res_mat <- matrix(c("insulin", "glucose", "pressure", "pregnant", "mass", "age", "diabetes" ), ncol = 1)
fin_mat <- mat[, res_mat[, 1]]
#removing rows
flatten(fin_mat)
#extracting first 100 rows
mat <- mat[0:100,]
#extracting specific columns
res_mat <- matrix(c("insulin", "glucose", "pressure", "pregnant", "mass", "age", "diabetes" ), ncol = 1)
fin_mat <- mat[, res_mat[, 1]]
#removing rows
fin_mat = flatten(fin_mat)
#removing rows
as.vector(fin_mat)
##Question 5
pregnancy <- c()
for (i in 1:len){
if (data$pregnant > 0){
pregnancy[i] <- "T"
}
else{
pregnancy[i] <- "F"
}
}
pregnancy
data$pregnant
##Question 5
pregnancy <- c()
for (i in 1:len){
if (data$pregnant[i] > 0){
pregnancy[i] <- "T"
}
else{
pregnancy[i] <- "F"
}
}
pregnancy
length(pregnancy)
pregnancy[names(pregnancy))=="T"]
pregnancy[names(pregnancy)=="T"]
pregnancy[names(pregnancy)==T]
table(pregnancy)
##Question 5
pregnancy <- c()
for (i in 1:len){
if (data$pregnant[i] > 0){
pregnancy[i] <- "Y"
}
else{
pregnancy[i] <- "N"
}
}
length(pregnancy)
#shows number o
table(pregnancy)
#shows number of Yes and No values. There are 111 women who hae never been pregnant. While 657 women have been pregnant even once.
table(pregnancy)
data$pregnancy = pregnancy
data
#including the vairable in our dataset
data$pressuretype = pressuretype
data
##Question 6
pressuretype <- c()
for (i in 1:len){
if (data$pressure > 80){
pressuretype[i] <- "High"
}
else if (data$pressure > 40){
pressuretype[i] <- "Average"
}
else{
pressuretype[i] <- "Low"
}
}
#including the vairable in our dataset
data$pressuretype = pressuretype
data
##Question 6
pressuretype <- c()
for (i in 1:len){
if (data$pressure[i] > 80){
pressuretype[i] <- "High"
}
else if (data$pressure > 40){
pressuretype[i] <- "Average"
}
else{
pressuretype[i] <- "Low"
}
}
##Question 6
pressuretype <- c()
for (i in 1:len){
if (data$pressure[i] > 80){
pressuretype[i] <- "High"
}
else if (data$pressure[i] > 40){
pressuretype[i] <- "Average"
}
else{
pressuretype[i] <- "Low"
}
}
#including the vairable in our dataset
data$pressuretype = pressuretype
data
#extracting first 100 rows
mat <- mat[0:100,]
#extracting specific columns
res_mat <- matrix(c("insulin", "glucose", "pressure", "pregnant", "mass", "age", "diabetes" ), ncol = 1)
fin_mat <- mat[, res_mat[, 1]]
fin_mat
#shows number of Yes and No values. There are 111 women who hae never been pregnant. While 657 women have been pregnant even once.
table(pressuretype)
#high blood pressure women with diabetes
value <- data[data$pressuretype == "High"]
#high blood pressure women with diabetes
value <- data[(data$pressuretype == "High") & (data$diabetes == "pos" ),]
value
length(value)
nrow(value)
##Question 7
min <- min(data$age)
min
max <- max(data$age)
max
range <- c(min,max)
range
intervals <- cut(data$age,range)
intervals
c1 <- cut(data$age, breaks = seq(min, max, by = 5))
## table of the resulting factor
table(c1)
min
max <- max(data$age)
max
c1 <- cut(data$age, breaks = seq(min, max, by = 5), labels = 1:10)
## table of the resulting factor
table(c1)
c1 <- cut(data$age, breaks = seq(min, max, by = 5), labels = 1:12)
## table of the resulting factor
table(c1)
c1
c1 <- cut(data$age, breaks = seq(min, max, by = 5), labels = 1:13)
## table of the resulting factor
table(c1)
data
min
min
max <- max(data$age)
max
c1 <- cut(data$age, breaks = seq(min-1, max+1, by = 5), labels = 1:12)
## table of the resulting factor
table(c1)
c1
#part i
plot(glucose ~ insulin, data = data, type='p',pch=19,ylab="Glucose Level", xlab="Insulin Level", col=c("black", "yellow")[data$diabetes], main="Glucose Level versus Insulin Level")
#part i
plot(glucose ~ insulin, data = data, type='p',pch=19,ylab="Glucose Level", xlab="Insulin Level", col=c("red", "yellow")[data$diabetes], main="Glucose Level versus Insulin Level")
#part i
plot(glucose ~ insulin, data = data, type='p',pch=19,ylab="Glucose Level", xlab="Insulin Level", col=c("red", "yellow")[data$diabetes], main="Glucose Level versus Insulin Level")
#adding legend
legend(600,80, legend = c("Y", "N"), col = c("red", "yellow"), pch = c(16,16,16), cex = 0.75) #providing coordinates on a plot (1 on the x axis, 8 on the y axis)
#adding legend
levels(data$diabetes)
#part i
plot(glucose ~ insulin, data = data, type='p',pch=19,ylab="Glucose Level", xlab="Insulin Level", col=c("red", "yellow")[data$diabetes], main="Glucose Level versus Insulin Level")
#adding legend
levels(data$diabetes)
legend(600,80, legend = c("Not diabetic", "Diabetic"), col = c("red", "yellow"), pch = c(16,16,16), cex = 0.75) #providing coordinates on a plot (1 on the x axis, 8 on the y axis)
#part i
plot(glucose ~ insulin, data = data, type='p',pch=19,ylab="Glucose Level", xlab="Insulin Level", col=c("red", "yellow")[data$diabetes], main="Glucose Level versus Insulin Level")
#adding legend
levels(data$diabetes)
legend(550,80, legend = c("Not diabetic", "Diabetic"), col = c("red", "yellow"), pch = c(16,16,16), cex = 0.75) #providing coordinates on a plot (1 on the x axis, 8 on the y axis)
#part i
plot(glucose ~ insulin, data = data, type='p',pch=19,ylab="Glucose Level (mmol/L)", xlab="Insulin Level (ml)", col=c("red", "yellow")[data$diabetes], main="Glucose Level versus Insulin Level")
#adding legend
levels(data$diabetes)
legend(550,80, legend = c("Not diabetic", "Diabetic"), col = c("red", "yellow"), pch = c(16,16,16), cex = 0.75) #providing coordinates on a plot (1 on the x axis, 8 on the y axis)
#part ii
plot(insulin ~ pedigree, data = data, type='p',pch=19,ylab="Insulin Level (ml)", xlab="Pedigree Factor", col=c("red", "yellow")[data$diabetes], main="Insulin Level versus Pidegree Factor")
#adding legend
levels(data$diabetes)
legend(550,80, legend = c("Not diabetic", "Diabetic"), col = c("red", "yellow"), pch = c(16,16,16), cex = 0.75) #providing coordinates on a plot (1 on the x axis, 8 on the y axis)
#part ii
plot(insulin ~ pedigree, data = data, type='p',pch=19,ylab="Insulin Level (ml)", xlab="Pedigree Factor", col=c("red", "yellow")[data$diabetes], main="Insulin Level versus Pidegree Factor")
#adding legend
levels(data$diabetes)
legend(1.0,800, legend = c("Not diabetic", "Diabetic"), col = c("red", "yellow"), pch = c(16,16,16), cex = 0.75) #providing coordinates on a plot (1 on the x axis, 8 on the y axis)
?par
#part iii
plot(mass ~ pressure, data = data, type='p',pch=c(17,19)[data$pregnancy] ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")[data$diabetes], main="Insulin Level versus Pidegree Factor")
#part iii
plot(mass ~ pressure, data = data, type='p',pch=17 ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")[data$diabetes], main="Body mass index Vs Blood pressure")
#part iii
plot(mass ~ pressure, data = data, type='p',pch=(17,19)[as.numeric(data$pregnancy)] ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")[data$diabetes], main="Body mass index Vs Blood pressure")
#part iii
plot(mass ~ pressure, data = data, type='p',pch=c(17,19)[as.numeric(data$pregnancy)] ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")[data$diabetes], main="Body mass index Vs Blood pressure")
#part iii
plot(mass ~ pressure, data = data, type='p',pch=c(17,19)[data$pregnancy] ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")[data$diabetes], main="Body mass index Vs Blood pressure")
#part iii
plot(mass ~ pressure, data = data, type='p', pch=c(17,19)[as.numeric(data$pregnancy)] ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")[data$diabetes], main="Body mass index Vs Blood pressure")
#part iii
plot(mass ~ pressure, data = data, type='p', pch=17 ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")[data$diabetes], main="Body mass index Vs Blood pressure")
#part iii
plot(mass ~ pressure, data = data, type='p', pch=17 ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")data[data$diabetes], main="Body mass index Vs Blood pressure")
#part iii
plot(mass ~ pressure, data = data, type='p', pch=17 ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")data[data$diabetes], main="Body mass index Vs Blood pressure")
#part iii
shapes = c(16, 18)
shapes <- shapes[as.numeric(iris$Species)]
plot(mass ~ pressure, data = data, type='p', pch=shapes ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")[data$diabetes], main="Body mass index Vs Blood pressure")
#part iii
shapes = c(16, 17)
shapes <- shapes[as.numeric(iris$Species)]
plot(mass ~ pressure, data = data, type='p', pch=shapes ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")[data$diabetes], main="Body mass index Vs Blood pressure")
legend(1.0,800, legend = c("Not diabetic", "Diabetic"), col = c("red", "yellow"), pch = c(16,17,16,17), cex = 0.75) #providing coordinates on a plot (1 on the x axis, 8 on the y axis)
legend(20,60, legend = c("Not diabetic", "Diabetic"), col = c("red", "yellow"), pch = c(16,17,16,17), cex = 0.75) #providing coordinates on a plot (1 on the x axis, 8 on the y axis)
legend(20,60, legend = c("Not diabetic", "Diabetic"), col = c("red", "red","yellow", "yellow"), pch = c(16,17,16,17), cex = 0.75) #providing coordinates on a plot (1 on the x axis, 8 on the y axis)
levels(data$pregnancy)
#adding legend
levels(data$diabetes)
data$pregnancy)
data$pregnancy
#Legend is incomplete
legend(20,60, legend = c("Not diabetic and pregnant", "Not Diabetic and not pregnant","Diabetic and pregnant", "Diabetic and not pregnant"), col = c("red", "red","yellow", "yellow"), pch = c(16,17,16,17), cex = 0.75)
#Legend is incomplete
legend(10,60, legend = c("Not diabetic and pregnant", "Not Diabetic and not pregnant","Diabetic and pregnant", "Diabetic and not pregnant"), col = c("red", "red","yellow", "yellow"), pch = c(16,17,16,17), cex = 0.75)
plot(mass ~ pressure, data = data, type='p', pch=shapes ,ylab="Body mass index (ml)", xlab="Blood Pressure ", col=c("red", "yellow")[data$diabetes], main="Body mass index Vs Blood pressure")
#adding legend
levels(data$diabetes)
data$pregnancy
#Legend is incomplete
legend(10,80, legend = c("Not diabetic and pregnant", "Not Diabetic and not pregnant","Diabetic and pregnant", "Diabetic and not pregnant"), col = c("red", "red","yellow", "yellow"), pch = c(16,17,16,17), cex = 0.75)
